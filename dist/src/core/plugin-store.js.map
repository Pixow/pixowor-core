{"version":3,"file":"plugin-store.js","sourceRoot":"","sources":["../../../src/core/plugin-store.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from \"events\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { diff, gte } from \"semver\";\r\nimport { Plugin } from \"./plugin\";\r\n\r\ntype BindData = { [k: string]: any };\r\n\r\nexport class Event {\r\n  name: string;\r\n  data: BindData;\r\n\r\n  constructor(name: string, data: BindData = {}) {\r\n    this.name = name;\r\n    this.data = data;\r\n  }\r\n}\r\n\r\nexport class PluginStore extends EventEmitter {\r\n  private _functionArray: Map<string, any>;\r\n  private _pluginMap: Map<string, Plugin>;\r\n  private _observerMap = new Map<string, BehaviorSubject<any>>();\r\n\r\n  constructor() {\r\n    super();\r\n    this._functionArray = new Map<string, any>();\r\n    this._pluginMap = new Map<string, Plugin>();\r\n  }\r\n\r\n  public get observerMap(): Map<string, BehaviorSubject<any>> {\r\n    return this._observerMap;\r\n  }\r\n\r\n  private dependencyValid(installedVersion: string, requiredVersion: string) {\r\n    const versionDiff = diff(installedVersion, requiredVersion);\r\n    return (\r\n      (versionDiff === null ||\r\n        versionDiff === \"patch\" ||\r\n        versionDiff === \"minor\") &&\r\n      gte(installedVersion, requiredVersion)\r\n    );\r\n  }\r\n\r\n  getInstalledPlugins() {\r\n    return Array.from(this._pluginMap.values());\r\n  }\r\n\r\n  async prepare(plugin: Plugin) {\r\n    const pluginNameAndVer = plugin.getPluginIdentify();\r\n    const [pluginName, _] = pluginNameAndVer.split(\"@\");\r\n    const pluginDependencies = plugin.getDependencies() || [];\r\n\r\n    const installed = this._pluginMap.get(pluginName);\r\n\r\n    if (installed) {\r\n      return;\r\n    }\r\n\r\n    // check dependencies is installed\r\n    let installErrors: string[] = [];\r\n    pluginDependencies.forEach((dep: string) => {\r\n      const [depName, depVersion] = dep.split(\"@\");\r\n      const plugin = this._pluginMap.get(depName);\r\n\r\n      if (!plugin) {\r\n        installErrors.push(\r\n          `Plugin ${pluginName}: ${depName} has not installed!`\r\n        );\r\n      } else {\r\n        const [, installedVersion] = plugin.getPluginIdentify().split(\"@\");\r\n        if (!this.dependencyValid(installedVersion, depVersion)) {\r\n          installErrors.push(\r\n            `Plugin ${pluginName} need ${depName}@${depVersion}, but ${installedVersion} installed!`\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    if (installErrors.length === 0) {\r\n      this._pluginMap.set(pluginName, plugin);\r\n      await plugin.prepare();\r\n    } else {\r\n      installErrors.forEach((err) => console.error(err));\r\n    }\r\n  }\r\n\r\n  activate(plugin: Plugin) {\r\n    plugin.activate();\r\n  }\r\n\r\n  deactivate(pluginName: string) {\r\n    let plugin = this._pluginMap.get(pluginName);\r\n\r\n    if (plugin) {\r\n      plugin.deactivate();\r\n      this._pluginMap.delete(pluginName);\r\n    }\r\n  }\r\n\r\n  addFunction(key: string, fn: any) {\r\n    this._functionArray.set(key, fn);\r\n  }\r\n\r\n  execFunction(key: string, ...args: any) {\r\n    let fn = this._functionArray.get(key);\r\n    if (fn) {\r\n      return fn(...args);\r\n    }\r\n  }\r\n\r\n  removeFunction(key: string) {\r\n    this._functionArray.delete(key);\r\n  }\r\n\r\n  addEventListener<EventType = Event>(\r\n    name: string,\r\n    listener: (event: EventType) => void\r\n  ) {\r\n    this.addListener(name, listener);\r\n  }\r\n\r\n  addOnceEventListener<EventType = Event>(\r\n    name: string,\r\n    listener: (event: EventType) => void\r\n  ) {\r\n    this.once(name, listener);\r\n  }\r\n\r\n  removeEventListener<EventType = Event>(\r\n    name: string,\r\n    listener: (event: EventType) => void\r\n  ) {\r\n    this.removeListener(name, listener);\r\n  }\r\n\r\n  dispatchEvent(event: Event) {\r\n    this.emit(event.name, event);\r\n  }\r\n\r\n  removeAllEvents() {\r\n    this.removeAllListeners();\r\n  }\r\n\r\n  registObserver(name: string, data?: any) {\r\n    this._observerMap.set(name, new BehaviorSubject(data || null));\r\n  }\r\n\r\n  getObserver(name: string): BehaviorSubject<any> | undefined {\r\n    return this._observerMap.get(name);\r\n  }\r\n}\r\n"]}