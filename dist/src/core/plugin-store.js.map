{"version":3,"file":"plugin-store.js","sourceRoot":"","sources":["../../../src/core/plugin-store.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from \"events\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { diff, gte } from \"semver\";\r\nimport { Plugin } from \"./plugin\";\r\n\r\ntype BindData = { [k: string]: any };\r\n\r\nexport class Event {\r\n  name: string;\r\n  data: BindData;\r\n\r\n  constructor(name: string, data: BindData = {}) {\r\n    this.name = name;\r\n    this.data = data;\r\n  }\r\n}\r\n\r\nexport class PluginStore extends EventEmitter {\r\n  private _functionArray: Map<string, any>;\r\n  private _pluginMap: Map<string, Plugin>;\r\n  private _observerMap = new Map<string, BehaviorSubject<any>>();\r\n\r\n  constructor() {\r\n    super();\r\n    this._functionArray = new Map<string, any>();\r\n    this._pluginMap = new Map<string, Plugin>();\r\n  }\r\n\r\n  public get observerMap(): Map<string, BehaviorSubject<any>> {\r\n    return this._observerMap;\r\n  }\r\n\r\n  private dependencyValid(installedVersion: string, requiredVersion: string) {\r\n    const versionDiff = diff(installedVersion, requiredVersion);\r\n    return (\r\n      (versionDiff === null ||\r\n        versionDiff === \"patch\" ||\r\n        versionDiff === \"minor\") &&\r\n      gte(installedVersion, requiredVersion)\r\n    );\r\n  }\r\n\r\n  getInstalledPlugins() {\r\n    return Array.from(this._pluginMap.values());\r\n  }\r\n\r\n  install(plugin: Plugin) {\r\n    const pluginNameAndVer = plugin.getPluginIdentify();\r\n    const [pluginName, _] = pluginNameAndVer.split(\"@\");\r\n    const pluginDependencies = plugin.getDependencies() || [];\r\n\r\n    const installed = this._pluginMap.get(pluginName);\r\n\r\n    if (installed) {\r\n      return;\r\n    }\r\n\r\n    // check dependencies is installed\r\n    let installErrors: string[] = [];\r\n    pluginDependencies.forEach((dep: string) => {\r\n      const [depName, depVersion] = dep.split(\"@\");\r\n      const plugin = this._pluginMap.get(depName);\r\n\r\n      if (!plugin) {\r\n        installErrors.push(\r\n          `Plugin ${pluginName}: ${depName} has not installed!`\r\n        );\r\n      } else {\r\n        const [, installedVersion] = plugin.getPluginIdentify().split(\"@\");\r\n        if (!this.dependencyValid(installedVersion, depVersion)) {\r\n          installErrors.push(\r\n            `Plugin ${pluginName} need ${depName}@${depVersion}, but ${installedVersion} installed!`\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    if (installErrors.length === 0) {\r\n      this._pluginMap.set(pluginName, plugin);\r\n      plugin.activate();\r\n    } else {\r\n      installErrors.forEach((err) => console.error(err));\r\n    }\r\n  }\r\n\r\n  uninstall(pluginName: string) {\r\n    let plugin = this._pluginMap.get(pluginName);\r\n\r\n    if (plugin) {\r\n      plugin.deactivate();\r\n      this._pluginMap.delete(pluginName);\r\n    }\r\n  }\r\n\r\n  addFunction(key: string, fn: any) {\r\n    this._functionArray.set(key, fn);\r\n  }\r\n\r\n  execFunction(key: string, ...args: any) {\r\n    let fn = this._functionArray.get(key);\r\n    if (fn) {\r\n      return fn(...args);\r\n    }\r\n  }\r\n\r\n  removeFunction(key: string) {\r\n    this._functionArray.delete(key);\r\n  }\r\n\r\n  addEventListener<EventType = Event>(\r\n    name: string,\r\n    listener: (event: EventType) => void\r\n  ) {\r\n    this.addListener(name, listener);\r\n  }\r\n\r\n  addOnceEventListener<EventType = Event>(\r\n    name: string,\r\n    listener: (event: EventType) => void\r\n  ) {\r\n    this.once(name, listener);\r\n  }\r\n\r\n  removeEventListener<EventType = Event>(\r\n    name: string,\r\n    listener: (event: EventType) => void\r\n  ) {\r\n    this.removeListener(name, listener);\r\n  }\r\n\r\n  dispatchEvent(event: Event) {\r\n    this.emit(event.name, event);\r\n  }\r\n\r\n  removeAllEvents() {\r\n    this.removeAllListeners();\r\n  }\r\n\r\n  registObserver(name: string, data?: any) {\r\n    this._observerMap.set(name, new BehaviorSubject(data || null));\r\n  }\r\n\r\n  getObserver(name: string): BehaviorSubject<any> | undefined {\r\n    return this._observerMap.get(name);\r\n  }\r\n}\r\n"]}