{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../src/plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Type } from \"@angular/core\";\r\nimport { Severity } from \"./workspace-manager\";\r\nimport { UIEvents } from \"./events\";\r\nimport { QingCore } from \"./qing-core\";\r\n\r\n/**\r\n * Mod = Cmd on MacOS and Ctrl on other OS\r\n * Ctrl = Ctrl key for every OS\r\n * Meta = Cmd on MacOS and Win key on other OS\r\n * @public\r\n */\r\nexport type Modifier = \"Mod\" | \"Ctrl\" | \"Meta\" | \"Shift\" | \"Alt\";\r\n\r\nexport interface Hotkey {\r\n  modifiers: Modifier[];\r\n  key: string;\r\n}\r\n\r\nexport interface Command {\r\n  /**\r\n   * Globally unique ID to identify this command\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * Human friendly name for searching\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Simple callback, triggered globally\r\n   */\r\n  callback?: () => any;\r\n\r\n  hotkeys?: Hotkey[];\r\n}\r\n\r\nexport interface PluginManifest {\r\n  pid: string;\r\n  name: string;\r\n  author: string;\r\n  version: string;\r\n  description: string;\r\n  minAppVersion: string;\r\n  authorUrl?: string;\r\n  dependencies?: { [k: string]: string };\r\n}\r\n\r\nexport abstract class Plugin {\r\n  private _qingCore: QingCore;\r\n\r\n  public pid: string;\r\n  public name: string;\r\n  public author: string;\r\n  public version: string;\r\n  public description: string;\r\n  public minAppVersion: string;\r\n  public authorUrl?: string;\r\n  public dependencies?: { [k: string]: string };\r\n\r\n  constructor(qingCore: QingCore, manifest: PluginManifest) {\r\n    this._qingCore = qingCore;\r\n\r\n    this.pid = manifest.pid;\r\n    this.name = manifest.name;\r\n    this.author = manifest.author;\r\n    this.version = manifest.version;\r\n    this.description = manifest.description;\r\n    this.minAppVersion = manifest.minAppVersion;\r\n    this.authorUrl = manifest.authorUrl;\r\n    this.dependencies = manifest.dependencies;\r\n  }\r\n\r\n  async install() {}\r\n  abstract activate(): void;\r\n  abstract deactivate(): void;\r\n\r\n  /**\r\n   * Get qing core\r\n   */\r\n  public get qingCore(): QingCore {\r\n    return this._qingCore;\r\n  }\r\n\r\n  public colorLog(message: string) {\r\n    console.log(\r\n      `%c ${message}`,\r\n      \"background: #222; color: #bada55\"\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Register a command globally. The command id and name will be automatically prefixed with this plugin's id and name.\r\n   * @param command Command\r\n   */\r\n  public addCommand(command: Command) {\r\n    this.qingCore.serviceManager.registCommand(command);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} label - Menu label\r\n   * @param {Function} callback - The callback to trigger\r\n   */\r\n  public addMenu(label: string, callback: Function) {\r\n    this.qingCore.workspace.emit(UIEvents.ADD_MENU, { label, callback });\r\n  }\r\n\r\n  /**\r\n   * Regist angular component for use.\r\n   * @param  {string} name - Component\r\n   * @param  {Component} component - Register a angular component. The function will use component classname as key to regist.\r\n   */\r\n  public registerComponent(name: string, component: Component) {\r\n    this.qingCore.stateManager.registerComponent(name, component);\r\n  }\r\n\r\n  /**\r\n   * UnRegister angular component that registed.\r\n   * @param name - Component name\r\n   */\r\n  public unRrgisterComponent(name: string) {\r\n    this.qingCore.stateManager.unregisterComponent(name);\r\n  }\r\n\r\n  /**\r\n   * Regist variable\r\n   * @param name - variable name\r\n   * @param data - variable init data\r\n   */\r\n  public registerVariable(name: string, data: any = null) {\r\n    this.qingCore.stateManager.registerVariable(name, data);\r\n  }\r\n\r\n  /**\r\n   * UnRegister variable\r\n   * @param name - variable name\r\n   */\r\n  public unRegisterVariable(name: string) {\r\n    this.qingCore.stateManager.unRegisterVariable(name);\r\n  }\r\n\r\n  /**\r\n   * Toast message\r\n   * @param {Severity} severity - Message severity.\r\n   * @param {string} message - Toast message.\r\n   */\r\n  public toast(severity: Severity, message: string) {\r\n    this.qingCore.workspace.toast(severity, message);\r\n  }\r\n\r\n  public alert(message: string) {\r\n    this.qingCore.workspace.emit(UIEvents.ALERT, { message });\r\n  }\r\n\r\n  /**\r\n   * Open a component you registed in a dialog.\r\n   * @param {string} componentName - Component name.\r\n   */\r\n  public openDialog(componentName: string) {\r\n    this.qingCore.workspace.emit(UIEvents.OPEN_DIALOG, { componentName });\r\n  }\r\n\r\n  /**\r\n   * Get value from localstorage\r\n   * @param key localstorage key\r\n   * @returns\r\n   */\r\n  public get(key: string) {\r\n    return this.qingCore.storageManager.get(key);\r\n  }\r\n}\r\n"]}